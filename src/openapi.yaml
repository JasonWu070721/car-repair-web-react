openapi: "3.0.0"
info:
  title: Simple API overview
  version: 2.0.0

paths:
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      tags:
        - users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user to return.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: A user object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Jessica Smith
        "400":
          description: The specified user ID is invalid (not a number).
        "404":
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error

  /customers/{id}:
    get:
      summary: Returns a customer by ID.
      tags:
        - customers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the customer to return.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: A customer object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Jessica Smith
        "400":
          description: The specified customer ID is invalid (not a number).
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: A customer with the specified ID was not found.
        default:
          description: Unexpected error

  /customers/:
    get:
      summary: Returns a customer by ID.
      tags:
        - customers
      responses:
        "200":
          description: A customer object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 4
                  name:
                    type: string
                    example: Jessica Smith
        "400":
          description: The specified customer ID is invalid (not a number).
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: A customer with the specified ID was not found.
        default:
          description: Unexpected error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    default:
      statusCode: "200"
      responseParameters:
        method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        method.response.header.Access-Control-Allow-Methods: "'*'"
        method.response.header.Access-Control-Allow-Origin: "'*'"
    UnauthorizedError:
      description: Access token is missing or invalid
